@startuml
' ####################### PACKAGES #######################
package "Security" {
  class User {
    + id: Long
    + email: String
    + password: String
    + role: String
  }

  class SecurityConfig {
    + configure(http: HttpSecurity): void
    + userDetailsService(): UserDetailsService
  }

  class JwtUtil {
    + generateToken(userDetails: UserDetails): String
    + extractUsername(token: String): String
    + validateToken(token: String): Boolean
  }

  class JwtAuthFilter {
    + doFilterInternal(request, response, chain): void
  }
}

package "Authentication" {
  interface AuthService {
    + login(email: String, password: String): AuthResponse
  }

  class AuthServiceImpl {
    - userRepository: UserRepository
    - jwtUtil: JwtUtil
    + login(...): AuthResponse
  }

  interface UserRepository {
    + findByEmail(email: String): User
  }

  class JpaUserRepository {
    + findByEmail(...): User
  }

  class AuthRequest {
    + email: String
    + password: String
  }

  class AuthResponse {
    + token: String
    + role: String
  }
}

package "Leave Management" {
  class LeaveRequest {
    + id: Long
    + startDate: LocalDate
    + endDate: LocalDate
    + status: String
    + reason: String
  }

  interface LeaveService {
    + submitRequest(request: LeaveRequestDTO): LeaveRequest
    + approveRequest(id: Long): void
  }

  class LeaveServiceImpl {
    - leaveRepository: LeaveRepository
    - policyValidator: LeavePolicyValidator
    + submitRequest(...): LeaveRequest
  }

  interface LeaveRepository {
    + save(...): LeaveRequest
  }

  class JpaLeaveRepository {
    + save(...): LeaveRequest
  }

  interface LeavePolicyValidator {
    + validate(request: LeaveRequestDTO): boolean
  }

  class BasicLeavePolicyValidator {
    + validate(...): boolean
  }

  class LeaveRequestDTO {
    + startDate: LocalDate
    + endDate: LocalDate
    + reason: String
  }
}

package "Attendance" {
  class Attendance {
    + id: Long
    + clockIn: LocalDateTime
    + clockOut: LocalDateTime
  }

  interface AttendanceService {
    + clockIn(user: User): void
    + clockOut(user: User): void
  }

  class AttendanceServiceImpl {
    - attendanceRepository: AttendanceRepository
    + clockIn(...): void
  }

  interface AttendanceRepository {
    + save(...): Attendance
  }
}

package "Dashboard" {
  class DashboardService {
    + getFilteredData(filters: FilterDTO): DashboardDataDTO
  }

  class FilterDTO {
    + startDate: LocalDate
    + endDate: LocalDate
    + department: String
  }

  class DashboardDataDTO {
    + chartData: Map<String, Integer>
    + tableData: List<LeaveRequest>
  }
}

' ####################### RELATIONSHIPS #######################
' Security Layer
AuthServiceImpl .up.|> AuthService
JpaUserRepository .up.|> UserRepository
AuthServiceImpl --> UserRepository
AuthServiceImpl --> JwtUtil
SecurityConfig --> JwtAuthFilter
SecurityConfig --> UserRepository

' Leave Management
LeaveServiceImpl .up.|> LeaveService
JpaLeaveRepository .up.|> LeaveRepository
LeaveServiceImpl --> LeaveRepository
LeaveServiceImpl --> LeavePolicyValidator
BasicLeavePolicyValidator .up.|> LeavePolicyValidator
LeaveRequestDTO --> LeaveRequest : mapped to

' Attendance
AttendanceServiceImpl .up.|> AttendanceService
AttendanceServiceImpl --> AttendanceRepository

' Associations
User "1" --> "0..*" LeaveRequest : submits
User "1" --> "0..*" Attendance : has
DashboardService --> LeaveRepository : queries
@enduml